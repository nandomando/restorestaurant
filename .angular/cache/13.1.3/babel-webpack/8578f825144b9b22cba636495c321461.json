{"ast":null,"code":"import { Router } from '@angular/router';\nimport { LoadingController, AlertController } from '@ionic/angular';\nimport { AuthService } from './auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\n\nfunction AuthPage_ion_item_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 15);\n    i0.ɵɵelementStart(1, \"ion-label\");\n    i0.ɵɵtext(2, \" Should be a valid email address. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AuthPage_ion_item_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\", 15);\n    i0.ɵɵelementStart(1, \"ion-label\");\n    i0.ɵɵtext(2, \" Should at least be 6 characters long. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let AuthPage = /*#__PURE__*/(() => {\n  class AuthPage {\n    constructor(authService, router, loadingCtrl, alertCtrl) {\n      this.authService = authService;\n      this.router = router;\n      this.loadingCtrl = loadingCtrl;\n      this.alertCtrl = alertCtrl;\n      this.isLoading = false;\n      this.isLogin = true;\n    }\n\n    ngOnInit() {}\n\n    authenticate(email, password) {\n      this.isLoading = true;\n      this.loadingCtrl.create({\n        keyboardClose: true,\n        message: 'Logging in...'\n      }).then(loadingEl => {\n        loadingEl.present();\n        let authObs;\n\n        if (this.isLogin) {\n          authObs = this.authService.login(email, password);\n        } else {\n          authObs = this.authService.signup(email, password);\n        }\n\n        authObs.subscribe(resData => {\n          this.currentuseremailinfo = resData.email;\n          this.isLoading = false;\n          loadingEl.dismiss();\n\n          if (resData.registered) {\n            this.router.navigateByUrl('/tabs/tab/home');\n          } else {\n            this.router.navigateByUrl('/restoinfo');\n          }\n        }, errRes => {\n          loadingEl.dismiss();\n          const code = errRes.error.error.message;\n          let message = 'Could not sign you up, please try again.';\n\n          if (code === 'EMAIL_EXISTS') {\n            message = 'This email address exists already!';\n          } else if (code === 'EMAIL_NOT_FOUND') {\n            message = 'E-Mail address could not be found.';\n          } else if (code === 'INVALID_PASSWORD') {\n            message = 'This password is not correct.';\n          }\n\n          this.showAlert(message);\n        });\n      });\n    }\n\n    onSwitchAuthMode() {\n      this.isLogin = !this.isLogin;\n    }\n\n    emailgetter(ev) {\n      this.emailstring = ev.target.value;\n    }\n\n    resetPassword() {\n      if (!this.emailstring) {\n        this.alertCtrl.create({\n          header: 'To Reset Password',\n          message: 'Please enter an E-mail',\n          buttons: ['Okay']\n        }).then(alertEl => alertEl.present());\n      } else {\n        this.alertCtrl.create({\n          header: 'Reset Password',\n          message: 'Are you sure you want to reset your password?',\n          buttons: [{\n            text: 'Cancel',\n            role: 'cancel',\n            handler: () => {\n              return;\n            }\n          }, {\n            text: 'Yes',\n            handler: () => {\n              this.authService.resetpassword(this.emailstring);\n            }\n          }]\n        }).then(alertEl => alertEl.present());\n      }\n    }\n\n    onSubmit(form) {\n      if (!form.valid) {\n        return;\n      }\n\n      const email = form.value.email;\n      const password = form.value.password;\n      this.authenticate(email, password);\n      form.reset();\n    }\n\n    showAlert(message) {\n      this.alertCtrl.create({\n        header: 'Authentication failed',\n        message: message,\n        buttons: ['Okay']\n      }).then(alertEl => alertEl.present());\n    }\n\n  }\n\n  AuthPage.ɵfac = function AuthPage_Factory(t) {\n    return new (t || AuthPage)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.LoadingController), i0.ɵɵdirectiveInject(i3.AlertController));\n  };\n\n  AuthPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AuthPage,\n    selectors: [[\"app-auth\"]],\n    decls: 32,\n    vars: 5,\n    consts: [[\"padding\", \"\"], [1, \"auth-background\"], [1, \"container-top\"], [1, \"logo\"], [1, \"container-form\"], [2, \"position\", \"absolute\", \"bottom\", \"inherit\", \"width\", \"100%\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [\"size-sm\", \"6\", \"offset-sm\", \"3\", 1, \"hero-form-input\"], [2, \"border-radius\", \"30px\", \"z-index\", \"2\"], [\"position\", \"floating\"], [\"type\", \"email\", \"ngModel\", \"\", \"name\", \"email\", \"required\", \"\", \"autocomplete\", \"\", \"email\", \"\", 3, \"ionInput\"], [\"emailCtrl\", \"ngModel\"], [\"lines\", \"none\", 4, \"ngIf\"], [\"type\", \"password\", \"ngModel\", \"\", \"name\", \"password\", \"required\", \"\", \"minlength\", \"6\"], [\"passwordCtrl\", \"ngModel\"], [\"lines\", \"none\"], [2, \"margin-top\", \"0\", \"font-size\", \"x-small\", 3, \"click\"], [\"size-sm\", \"6\", \"offset-sm\", \"3\"], [\"type\", \"button\", \"color\", \"light\", \"fill\", \"clear\", \"expand\", \"block\", 3, \"click\"], [\"type\", \"submit\", \"color\", \"primary\", \"expand\", \"block\", 3, \"disabled\"]],\n    template: function AuthPage_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"ion-content\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelement(3, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"form\", 5, 6);\n        i0.ɵɵlistener(\"ngSubmit\", function AuthPage_Template_form_ngSubmit_5_listener() {\n          i0.ɵɵrestoreView(_r5);\n\n          const _r0 = i0.ɵɵreference(6);\n\n          return ctx.onSubmit(_r0);\n        });\n        i0.ɵɵelementStart(7, \"ion-grid\");\n        i0.ɵɵelementStart(8, \"ion-row\");\n        i0.ɵɵelementStart(9, \"ion-col\", 7);\n        i0.ɵɵelementStart(10, \"ion-list\", 8);\n        i0.ɵɵelementStart(11, \"ion-item\");\n        i0.ɵɵelementStart(12, \"ion-label\", 9);\n        i0.ɵɵtext(13, \"E-Mail\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"ion-input\", 10, 11);\n        i0.ɵɵlistener(\"ionInput\", function AuthPage_Template_ion_input_ionInput_14_listener($event) {\n          return ctx.emailgetter($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, AuthPage_ion_item_16_Template, 3, 0, \"ion-item\", 12);\n        i0.ɵɵelementStart(17, \"ion-item\");\n        i0.ɵɵelementStart(18, \"ion-label\", 9);\n        i0.ɵɵtext(19, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"ion-input\", 13, 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, AuthPage_ion_item_22_Template, 3, 0, \"ion-item\", 12);\n        i0.ɵɵelementStart(23, \"ion-item\", 15);\n        i0.ɵɵelementStart(24, \"ion-label\", 16);\n        i0.ɵɵlistener(\"click\", function AuthPage_Template_ion_label_click_24_listener() {\n          return ctx.resetPassword();\n        });\n        i0.ɵɵtext(25, \"Forgot Password?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"ion-row\");\n        i0.ɵɵelementStart(27, \"ion-col\", 17);\n        i0.ɵɵelementStart(28, \"ion-button\", 18);\n        i0.ɵɵlistener(\"click\", function AuthPage_Template_ion_button_click_28_listener() {\n          return ctx.onSwitchAuthMode();\n        });\n        i0.ɵɵtext(29);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"ion-button\", 19);\n        i0.ɵɵtext(31);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(6);\n\n        const _r1 = i0.ɵɵreference(15);\n\n        const _r3 = i0.ɵɵreference(21);\n\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngIf\", !_r1.valid && _r1.touched);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", !_r3.valid && _r3.touched);\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\" Switch to \", ctx.isLogin ? \"Signup\" : \"Login\", \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !_r0.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.isLogin ? \"Login\" : \"Signup\", \" \");\n      }\n    },\n    directives: [i3.IonContent, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i3.IonGrid, i3.IonRow, i3.IonCol, i3.IonList, i3.IonItem, i3.IonLabel, i3.IonInput, i3.TextValueAccessor, i4.NgControlStatus, i4.NgModel, i4.RequiredValidator, i4.EmailValidator, i5.NgIf, i4.MinLengthValidator, i3.IonButton],\n    styles: [\".auth-background[_ngcontent-%COMP%]{background:linear-gradient(rgba(0,0,0,.5),rgba(0,0,0,.7)),url(empanadas.jpg);background-position:center top;background-repeat:no-repeat;background-size:cover;height:100vh;width:100vw;background-color:#000000b3;flex-direction:column;justify-content:stretch}.hero-form-input[_ngcontent-%COMP%]{opacity:.87}.logo[_ngcontent-%COMP%]{content:url(logoresto.png);width:300px}.container-top[_ngcontent-%COMP%]{height:50vh;display:flex;justify-content:center;align-items:center}.container-form[_ngcontent-%COMP%]{height:100%;bottom:0}\"]\n  });\n  return AuthPage;\n})();","map":null,"metadata":{},"sourceType":"module"}