{"ast":null,"code":"import { UsercardsService } from '../usercards.service';\nimport { Router } from '@angular/router'; // import { BarcodeScanner } from '@capacitor-community/barcode-scanner';\n\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner/ngx';\nimport { UserinfoService } from '../userinfo.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../usercards.service\";\nimport * as i2 from \"../userinfo.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@ionic-native/barcode-scanner/ngx\";\nimport * as i5 from \"@ionic/angular\";\nimport * as i6 from \"@angular/common\";\n\nfunction ScanPage_ion_col_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-col\", 2);\n    i0.ɵɵelementStart(1, \"div\", 3);\n    i0.ɵɵelementStart(2, \"div\", 4);\n    i0.ɵɵelement(3, \"ion-spinner\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ScanPage = /*#__PURE__*/(() => {\n  class ScanPage {\n    constructor(usercardsService, userinfoService, router, barcodeScanner) {\n      this.usercardsService = usercardsService;\n      this.userinfoService = userinfoService;\n      this.router = router;\n      this.barcodeScanner = barcodeScanner;\n      this.isLoading = false;\n      this.idcurrentusercard = null;\n    }\n\n    ngOnInit() {\n      this.isLoading = true;\n      this.barcodeScanner.scan().then(barcodeData => {\n        console.log('Barcode data', barcodeData);\n        this.idcurrentusercard = barcodeData;\n        let result = barcodeData.toString();\n        console.log('qr code result:', result);\n        this.navigator(result);\n      }).catch(err => {\n        console.log('Error', err);\n      }); // this.navigator('PtbAL3IZaqSOBeHSezsLFADYX7u2');\n\n      this.isLoading = false;\n    }\n\n    navigator(id) {\n      this.usercardsService.fetchOnlyUsercartas(id);\n      this.userinfoService.fetchOnlyUserinfo(id);\n      this.router.navigate(['/tabs/tab/edit']);\n    }\n\n    log() {\n      this.navigator('7iaz0spQN7RQOi6zeVnOsJUtRNb2');\n    }\n\n  }\n\n  ScanPage.ɵfac = function ScanPage_Factory(t) {\n    return new (t || ScanPage)(i0.ɵɵdirectiveInject(i1.UsercardsService), i0.ɵɵdirectiveInject(i2.UserinfoService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.BarcodeScanner));\n  };\n\n  ScanPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ScanPage,\n    selectors: [[\"app-scan\"]],\n    decls: 4,\n    vars: 1,\n    consts: [[2, \"padding\", \"0\"], [\"size-md\", \"6\", \"offset-md\", \"3\", \"class\", \"ion-text-center\", 4, \"ngIf\"], [\"size-md\", \"6\", \"offset-md\", \"3\", 1, \"ion-text-center\"], [1, \"wrapper\"], [1, \"container-text\"], [\"color\", \"primary\"]],\n    template: function ScanPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-content\");\n        i0.ɵɵelementStart(1, \"ion-grid\", 0);\n        i0.ɵɵelementStart(2, \"ion-row\");\n        i0.ɵɵtemplate(3, ScanPage_ion_col_3_Template, 4, 0, \"ion-col\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      }\n    },\n    directives: [i5.IonContent, i5.IonGrid, i5.IonRow, i6.NgIf, i5.IonCol, i5.IonSpinner],\n    styles: [\"\"]\n  });\n  return ScanPage;\n})();","map":null,"metadata":{},"sourceType":"module"}