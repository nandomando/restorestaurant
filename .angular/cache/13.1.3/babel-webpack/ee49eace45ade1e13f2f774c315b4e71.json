{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { Userinfo } from './userinfo.model';\nimport { HttpClient } from '@angular/common/http';\nimport { LoadingController } from '@ionic/angular';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/common/http\";\nexport let UserinfoService = /*#__PURE__*/(() => {\n  class UserinfoService {\n    constructor(loadingCtrl, http) {\n      this.loadingCtrl = loadingCtrl;\n      this.http = http;\n      this._usersInfo = new BehaviorSubject([]);\n    }\n\n    get usersinfo() {\n      return this._usersInfo.asObservable();\n    }\n\n    fetchOnlyUserinfo(id) {\n      return this.http.get(`https://resto-57119.firebaseio.com/usersinfo.json?`).subscribe(resData => {\n        console.log('resdata de fetchonlyuserinfo', resData);\n        const userinfoarr = [];\n\n        for (const key in resData) {\n          if (resData.hasOwnProperty(key) && resData[key].userId === id) {\n            userinfoarr.push(new Userinfo(key, resData[key].photo, resData[key].name, resData[key].email, resData[key].userId));\n          }\n        }\n\n        console.log('userinfoarray from fetchonlyuserinfo:', userinfoarr);\n\n        this._usersInfo.next(userinfoarr);\n      });\n    }\n\n  }\n\n  UserinfoService.ɵfac = function UserinfoService_Factory(t) {\n    return new (t || UserinfoService)(i0.ɵɵinject(i1.LoadingController), i0.ɵɵinject(i2.HttpClient));\n  };\n\n  UserinfoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserinfoService,\n    factory: UserinfoService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserinfoService;\n})();","map":null,"metadata":{},"sourceType":"module"}