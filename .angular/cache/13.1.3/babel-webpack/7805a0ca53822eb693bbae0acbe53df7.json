{"ast":null,"code":"import { Platform } from '@ionic/angular';\nimport { Plugins, Capacitor } from '@capacitor/core';\nimport { AuthService } from './auth/auth.service';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"./auth/auth.service\";\nimport * as i3 from \"@angular/router\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(platform, authService, router) {\n      this.platform = platform;\n      this.authService = authService;\n      this.router = router;\n      this.previousAuthState = false;\n      this.initializeApp();\n    }\n\n    initializeApp() {\n      this.platform.ready().then(() => {\n        if (Capacitor.isPluginAvailable('SplashScreen')) {\n          Plugins.SplashScreen.hide();\n        }\n      });\n    }\n\n    ngOnInit() {\n      this.authSub = this.authService.userIsAuthenticated.subscribe(isAuth => {\n        if (!isAuth && this.previousAuthState !== isAuth) {\n          this.router.navigateByUrl('/auth');\n        }\n\n        this.previousAuthState = isAuth;\n      });\n    }\n\n    ngOnDestroy() {\n      if (this.authSub) {\n        this.authSub.unsubscribe();\n      }\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 2,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-app\");\n        i0.ɵɵelement(1, \"ion-router-outlet\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    directives: [i1.IonApp, i1.IonRouterOutlet],\n    styles: [\"\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}