{"ast":null,"code":"import { r as registerInstance, d as createEvent, h, H as Host } from './index-2cd7e630.js';\nimport { b as getIonMode } from './ionic-global-a175fa73.js';\nimport { n as now } from './helpers-d8b49b57.js';\nimport { GESTURE_CONTROLLER } from './index-e44ebcc6.js';\nconst backdropIosCss = \":host{left:0;right:0;top:0;bottom:0;display:block;position:absolute;-webkit-transform:translateZ(0);transform:translateZ(0);contain:strict;cursor:pointer;opacity:0.01;-ms-touch-action:none;touch-action:none;z-index:2}:host(.backdrop-hide){background:transparent}:host(.backdrop-no-tappable){cursor:auto}:host{background-color:var(--ion-backdrop-color, #000)}\";\nconst backdropMdCss = \":host{left:0;right:0;top:0;bottom:0;display:block;position:absolute;-webkit-transform:translateZ(0);transform:translateZ(0);contain:strict;cursor:pointer;opacity:0.01;-ms-touch-action:none;touch-action:none;z-index:2}:host(.backdrop-hide){background:transparent}:host(.backdrop-no-tappable){cursor:auto}:host{background-color:var(--ion-backdrop-color, #000)}\";\nconst Backdrop = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.lastClick = -10000;\n    this.blocker = GESTURE_CONTROLLER.createBlocker({\n      disableScroll: true\n    });\n    /**\n     * If `true`, the backdrop will be visible.\n     */\n\n    this.visible = true;\n    /**\n     * If `true`, the backdrop will can be clicked and will emit the `ionBackdropTap` event.\n     */\n\n    this.tappable = true;\n    /**\n     * If `true`, the backdrop will stop propagation on tap.\n     */\n\n    this.stopPropagation = true;\n    this.ionBackdropTap = createEvent(this, \"ionBackdropTap\", 7);\n  }\n\n  connectedCallback() {\n    if (this.stopPropagation) {\n      this.blocker.block();\n    }\n  }\n\n  disconnectedCallback() {\n    this.blocker.unblock();\n  }\n\n  onTouchStart(ev) {\n    this.lastClick = now(ev);\n    this.emitTap(ev);\n  }\n\n  onMouseDown(ev) {\n    if (this.lastClick < now(ev) - 2500) {\n      this.emitTap(ev);\n    }\n  }\n\n  emitTap(ev) {\n    if (this.stopPropagation) {\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n\n    if (this.tappable) {\n      this.ionBackdropTap.emit();\n    }\n  }\n\n  render() {\n    const mode = getIonMode(this);\n    return h(Host, {\n      tabindex: \"-1\",\n      class: {\n        [mode]: true,\n        'backdrop-hide': !this.visible,\n        'backdrop-no-tappable': !this.tappable\n      }\n    });\n  }\n\n};\nBackdrop.style = {\n  /*STENCIL:MODE:ios*/\n  ios: backdropIosCss,\n\n  /*STENCIL:MODE:md*/\n  md: backdropMdCss\n};\nexport { Backdrop as ion_backdrop };","map":null,"metadata":{},"sourceType":"module"}