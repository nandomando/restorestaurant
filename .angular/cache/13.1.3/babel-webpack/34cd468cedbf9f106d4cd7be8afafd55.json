{"ast":null,"code":"import { EventEmitter, ElementRef // Input\n} from '@angular/core';\nimport { Plugins, Capacitor, CameraSource, CameraResultType } from '@capacitor/core';\nimport { Platform } from '@ionic/angular';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"filePicker\"];\n\nfunction ImagePickerComponent_ion_img_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-img\", 5);\n    i0.ɵɵlistener(\"click\", function ImagePickerComponent_ion_img_1_Template_ion_img_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.onPickImage();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r0.selectedImage);\n  }\n}\n\nfunction ImagePickerComponent_ion_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-button\", 6);\n    i0.ɵɵlistener(\"click\", function ImagePickerComponent_ion_button_3_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onPickImage();\n    });\n    i0.ɵɵelement(1, \"ion-icon\", 7);\n    i0.ɵɵelementStart(2, \"ion-label\");\n    i0.ɵɵtext(3, \"Take Picture\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ImagePickerComponent_input_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 8, 9);\n    i0.ɵɵlistener(\"change\", function ImagePickerComponent_input_5_Template_input_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.onFileChosen($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ImagePickerComponent = /*#__PURE__*/(() => {\n  class ImagePickerComponent {\n    constructor(platform) {\n      this.platform = platform;\n      this.imagePick = new EventEmitter();\n      this.usePicker = false;\n    }\n\n    ngOnInit() {\n      console.log('Mobile:', this.platform.is('mobile'));\n      console.log('Hybrid:', this.platform.is('hybrid'));\n      console.log('iOS:', this.platform.is('ios'));\n      console.log('Android:', this.platform.is('android'));\n      console.log('Desktop:', this.platform.is('desktop'));\n\n      if (this.platform.is('mobile') && !this.platform.is('hybrid') || this.platform.is('desktop')) {\n        this.usePicker = true;\n      }\n    }\n\n    onPickImage() {\n      if (!Capacitor.isPluginAvailable('Camera')) {\n        this.filePickerRef.nativeElement.click();\n        return;\n      }\n\n      Plugins.Camera.getPhoto({\n        quality: 50,\n        source: CameraSource.Prompt,\n        correctOrientation: true,\n        // height: 320,\n        width: 300,\n        resultType: CameraResultType.DataUrl\n      }).then(image => {\n        this.selectedImage = image.dataUrl;\n        this.imagePick.emit(image.dataUrl);\n      }).catch(error => {\n        console.log(error);\n\n        if (this.usePicker) {\n          this.filePickerRef.nativeElement.click();\n        }\n\n        return false;\n      });\n    }\n\n    onFileChosen(event) {\n      const pickedFile = event.target.files[0];\n\n      if (!pickedFile) {\n        return;\n      }\n\n      const fr = new FileReader();\n\n      fr.onload = () => {\n        const dataUrl = fr.result.toString();\n        this.selectedImage = dataUrl;\n        this.imagePick.emit(pickedFile);\n      };\n\n      fr.readAsDataURL(pickedFile);\n    }\n\n  }\n\n  ImagePickerComponent.ɵfac = function ImagePickerComponent_Factory(t) {\n    return new (t || ImagePickerComponent)(i0.ɵɵdirectiveInject(i1.Platform));\n  };\n\n  ImagePickerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ImagePickerComponent,\n    selectors: [[\"app-image-picker\"]],\n    viewQuery: function ImagePickerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.filePickerRef = _t.first);\n      }\n    },\n    outputs: {\n      imagePick: \"imagePick\"\n    },\n    decls: 6,\n    vars: 3,\n    consts: [[1, \"picker\"], [\"role\", \"button\", \"class\", \"image\", 3, \"src\", \"click\", 4, \"ngIf\"], [\"class\", \"ion-text-center\", \"color\", \"primary\", \"fill\", \"clear\", 3, \"click\", 4, \"ngIf\"], [\"lines\", \"none\"], [\"type\", \"file\", \"accept\", \"image/jpeg\", 3, \"change\", 4, \"ngIf\"], [\"role\", \"button\", 1, \"image\", 3, \"src\", \"click\"], [\"color\", \"primary\", \"fill\", \"clear\", 1, \"ion-text-center\", 3, \"click\"], [\"name\", \"camera\", \"slot\", \"start\"], [\"type\", \"file\", \"accept\", \"image/jpeg\", 3, \"change\"], [\"filePicker\", \"\"]],\n    template: function ImagePickerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, ImagePickerComponent_ion_img_1_Template, 1, 1, \"ion-img\", 1);\n        i0.ɵɵelementStart(2, \"ion-item\");\n        i0.ɵɵtemplate(3, ImagePickerComponent_ion_button_3_Template, 4, 0, \"ion-button\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-item\", 3);\n        i0.ɵɵtemplate(5, ImagePickerComponent_input_5_Template, 2, 0, \"input\", 4);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedImage);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.selectedImage);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.usePicker);\n      }\n    },\n    directives: [i2.NgIf, i1.IonImg, i1.IonItem, i1.IonButton, i1.IonIcon, i1.IonLabel],\n    styles: [\"input[type=file][_ngcontent-%COMP%]{display:none}\"]\n  });\n  return ImagePickerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}