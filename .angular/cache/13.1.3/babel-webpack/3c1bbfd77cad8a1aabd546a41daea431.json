{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { RestocardsService } from '../restocards.service';\nimport { Router } from '@angular/router';\nimport { LoadingController } from '@ionic/angular';\nimport { switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../restocards.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../shared/image-picker/image-picker.component\";\n\nfunction base64toBlob(base64Data, contentType) {\n  contentType = contentType || '';\n  const sliceSize = 1024;\n  const byteCharacters = window.atob(base64Data);\n  const bytesLength = byteCharacters.length;\n  const slicesCount = Math.ceil(bytesLength / sliceSize);\n  const byteArrays = new Array(slicesCount);\n\n  for (let sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\n    const begin = sliceIndex * sliceSize;\n    const end = Math.min(begin + sliceSize, bytesLength);\n    const bytes = new Array(end - begin);\n\n    for (let offset = begin, i = 0; offset < end; ++i, ++offset) {\n      bytes[i] = byteCharacters[offset].charCodeAt(0);\n    }\n\n    byteArrays[sliceIndex] = new Uint8Array(bytes);\n  }\n\n  return new Blob(byteArrays, {\n    type: contentType\n  });\n}\n\nexport let RestoinfoPage = /*#__PURE__*/(() => {\n  class RestoinfoPage {\n    constructor(restocardsService, router, loadingCtrl) {\n      this.restocardsService = restocardsService;\n      this.router = router;\n      this.loadingCtrl = loadingCtrl;\n    }\n\n    ngOnInit() {\n      this.form = new FormGroup({\n        name: new FormControl(null, {\n          updateOn: 'blur',\n          validators: [Validators.required]\n        }),\n        address: new FormControl(null, {\n          updateOn: 'blur',\n          validators: [Validators.required]\n        }),\n        photo: new FormControl(null)\n      });\n    }\n\n    onCreateRestocard() {\n      if (!this.form.valid) {\n        return;\n      }\n\n      this.loadingCtrl.create({\n        message: 'Creating Card...'\n      }).then(loadingEl => {\n        loadingEl.present();\n        this.restocardsService.uploadImage(this.form.get('photo').value).pipe(switchMap(uploadRes => {\n          return this.restocardsService.addRestocard(this.form.value.name, this.form.value.address, uploadRes.imageUrl);\n        })).subscribe(() => {\n          loadingEl.dismiss();\n          this.form.reset();\n          this.router.navigate(['/', 'tabs', 'tab', 'home']);\n        });\n      });\n    }\n\n    onImagePicked(imageData) {\n      let imageFile;\n\n      if (typeof imageData === 'string') {\n        try {\n          imageFile = base64toBlob(imageData.replace('data:image/png;base64,', ''), 'image/jpeg');\n        } catch (error) {\n          console.log(error);\n          return;\n        }\n      } else {\n        imageFile = imageData;\n      }\n\n      console.log('the end of onImagePicked');\n      console.log(imageFile);\n      this.form.patchValue({\n        photo: imageFile\n      });\n    }\n\n  }\n\n  RestoinfoPage.ɵfac = function RestoinfoPage_Factory(t) {\n    return new (t || RestoinfoPage)(i0.ɵɵdirectiveInject(i1.RestocardsService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.LoadingController));\n  };\n\n  RestoinfoPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RestoinfoPage,\n    selectors: [[\"app-restoinfo\"]],\n    decls: 28,\n    vars: 2,\n    consts: [[\"color\", \"primary\"], [1, \"ion-text-center\"], [1, \"topcontainer\"], [1, \"containerform\"], [3, \"formGroup\"], [\"position\", \"floating\"], [\"type\", \"text\", \"formControlName\", \"name\", \"autocomplete\", \"\", \"autocorrect\", \"\"], [\"type\", \"text\", \"formControlName\", \"address\"], [\"size-sm\", \"6\", \"offset-sm\", \"3\"], [3, \"imagePick\"], [\"type\", \"submit\", \"expand\", \"block\", \"color\", \"primary\", 3, \"disabled\", \"click\"]],\n    template: function RestoinfoPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\");\n        i0.ɵɵelementStart(1, \"ion-toolbar\", 0);\n        i0.ɵɵelementStart(2, \"ion-title\", 1);\n        i0.ɵɵtext(3, \"Add Resto Info\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-content\");\n        i0.ɵɵelement(5, \"div\", 2);\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵelementStart(7, \"form\", 4);\n        i0.ɵɵelementStart(8, \"ion-grid\");\n        i0.ɵɵelementStart(9, \"ion-row\");\n        i0.ɵɵelementStart(10, \"ion-col\");\n        i0.ɵɵelementStart(11, \"ion-item\");\n        i0.ɵɵelementStart(12, \"ion-label\", 5);\n        i0.ɵɵtext(13, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"ion-input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"ion-row\");\n        i0.ɵɵelementStart(16, \"ion-col\");\n        i0.ɵɵelementStart(17, \"ion-item\");\n        i0.ɵɵelementStart(18, \"ion-label\", 5);\n        i0.ɵɵtext(19, \"Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"ion-input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"ion-row\");\n        i0.ɵɵelementStart(22, \"ion-col\", 8);\n        i0.ɵɵelementStart(23, \"app-image-picker\", 9);\n        i0.ɵɵlistener(\"imagePick\", function RestoinfoPage_Template_app_image_picker_imagePick_23_listener($event) {\n          return ctx.onImagePicked($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"ion-row\");\n        i0.ɵɵelementStart(25, \"ion-col\");\n        i0.ɵɵelementStart(26, \"ion-button\", 10);\n        i0.ɵɵlistener(\"click\", function RestoinfoPage_Template_ion_button_click_26_listener() {\n          return ctx.onCreateRestocard();\n        });\n        i0.ɵɵtext(27, \"Add Card\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n      }\n    },\n    directives: [i3.IonHeader, i3.IonToolbar, i3.IonTitle, i3.IonContent, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i3.IonGrid, i3.IonRow, i3.IonCol, i3.IonItem, i3.IonLabel, i3.IonInput, i3.TextValueAccessor, i4.NgControlStatus, i4.FormControlName, i5.ImagePickerComponent, i3.IonButton],\n    styles: [\"\"]\n  });\n  return RestoinfoPage;\n})();","map":null,"metadata":{},"sourceType":"module"}